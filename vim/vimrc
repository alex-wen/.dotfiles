set nocompatible
filetype off " required

""" plugin things
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'jiangmiao/auto-pairs' " auto complete pairs
Plugin 'sheerun/vim-polyglot' " better language formatting support
Plugin 'scrooloose/nerdtree' " file tree on the side
Plugin 'Valloric/YouCompleteMe' " you already know what this plugin does
Plugin 'google/vim-searchindex' " show which index my search is on
Plugin 'christoomey/vim-tmux-navigator' " seamless navigation between vim and tmux
Plugin 'ryanoasis/vim-devicons'

 
" All of your Plugins must be added before the following line
call vundle#end()            " required

""" Colors
" Disable Background Color Erase (BCE) so that color schemes render properly when inside 256-color tmux and GNU screen.
" See also http://snk.tuxfamily.org/log/vim-256color-bce.html
if &term =~ '256color'
    set t_ut=
endif

" Use 24-bit (true-color) mode in Vim/Neovim when outside tmux (this is for the OneDark colorscheme)
if (has("nvim"))
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
if (has("termguicolors"))
    set termguicolors
endif

colorscheme onedark

""" nerd tree configuration
map <C-n> :NERDTreeToggle<CR>
let NERDTreeMinimalUI = 1
let g:NERDTreeMapOpenSplit = 'h'
let g:NERDTreeMapOpenVSplit = 'v'
" open nerdtree and enter nerdtree pane if there is no file to edit, otherwise
" edit the file
autocmd vimenter * if argc() == 1 | NERDTree | wincmd p | else | NERDTree | endif
" quit nerdtree if nerdtree is the only panel open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

""" general
set nu " show numbers
set noshowmode " Disable the mode status at the bottom
set showcmd " Show last command executed at the bottom of screen
set scrolloff=2 " Keep 2 screen lines above/below the cursor if possible
set ignorecase " Ignore case when searching ...
set smartcase " ... unless search pattern contains upper case characters
set smartindent " Smart autoindenting when starting a new line
set nowrap " Don't wrap lines
set linebreak " Wrap long lines; don't break words
set colorcolumn=81 " Highlight the 81st columnu
set encoding=utf-8
set fileencoding=utf-8
set splitbelow " new files open on the bottom
set splitright " new files open on the right
set mouse-=a " mouse doesnt goes to position

""" tab control
set expandtab " On pressing tab, insert 2 spaces
set tabstop=2 " show existing tab with 2 spaces width
set shiftwidth=2 " when indenting with '>', use 2 spaces width
set softtabstop=2 " # of spaces inserted when you hit tab in Insert mode, and the # of spaces deleted when you hit backspace on a tab

""" map commands
nmap <c-s> :w<CR>
nmap <c-q> :q<CR>


filetype plugin indent on " Enable file type based indenting and syntax highlighting (Note: needs to be at the end)
syntax on
